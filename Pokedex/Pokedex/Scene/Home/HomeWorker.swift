//
//  HomeWorker.swift
//  Pokedex
//
//  Created by Mario Ch√°vez on 16/12/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

protocol HomeWorkerInterface {
    func fetchPokemons(completion: @escaping (Result<PokemonsDataModel, Error>) -> Void)
    func searchPokemon(request: HomeModels.searchPokemon.Request, completion: @escaping (Result<PokemonSearchDataModel, Error>) -> Void)

}

class HomeWorker: HomeWorkerInterface {
    let urlBase = "https://pokeapi.co/api/v2/pokemon/"
    func fetchPokemons(completion: @escaping (Result<PokemonsDataModel, Error>) -> Void) {
        AF.request(urlBase).responseDecodable(of: PokemonsDataModel.self) { response in
            switch response.result {
            case .success(let pokemonResponse):
                print("Recieved post: \(pokemonResponse)")
                completion(.success(pokemonResponse))
            case .failure(let error):
                print("Failed with error: \(error)")
                completion(.failure(error))
            }
        }
    }
    
    func searchPokemon(request: HomeModels.searchPokemon.Request, completion: @escaping (Result<PokemonSearchDataModel, Error>) -> Void) {
        let url = urlBase + request.pokemon
        AF.request(url).responseDecodable(of: PokemonSearchDataModel.self) { response in
            switch response.result {
            case .success(let pokemonResponse):
                print("Recieved post: \(pokemonResponse)")
                completion(.success(pokemonResponse))
            case .failure(let error):
                print("Failed with error: \(error)")
                completion(.failure(error))
            }
        }
    }
}
